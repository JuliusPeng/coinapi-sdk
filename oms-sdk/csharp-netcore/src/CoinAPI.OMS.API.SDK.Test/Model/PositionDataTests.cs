/* 
 * OMS - REST API .
 *
 * OMS Project
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CoinAPI.OMS.API.SDK.Api;
using CoinAPI.OMS.API.SDK.Model;
using CoinAPI.OMS.API.SDK.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CoinAPI.OMS.API.SDK.Test
{
    /// <summary>
    ///  Class for testing PositionData
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PositionDataTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PositionData
        //private PositionData instance;

        public PositionDataTests()
        {
            // TODO uncomment below to create an instance of PositionData
            //instance = new PositionData();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PositionData
        /// </summary>
        [Fact]
        public void PositionDataInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" PositionData
            //Assert.IsInstanceOfType<PositionData> (instance, "variable 'instance' is a PositionData");
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'SymbolExchange'
        /// </summary>
        [Fact]
        public void SymbolExchangeTest()
        {
            // TODO unit test for the property 'SymbolExchange'
        }
        /// <summary>
        /// Test the property 'SymbolCoinapi'
        /// </summary>
        [Fact]
        public void SymbolCoinapiTest()
        {
            // TODO unit test for the property 'SymbolCoinapi'
        }
        /// <summary>
        /// Test the property 'AvgEntryPrice'
        /// </summary>
        [Fact]
        public void AvgEntryPriceTest()
        {
            // TODO unit test for the property 'AvgEntryPrice'
        }
        /// <summary>
        /// Test the property 'Quantity'
        /// </summary>
        [Fact]
        public void QuantityTest()
        {
            // TODO unit test for the property 'Quantity'
        }
        /// <summary>
        /// Test the property 'IsBuy'
        /// </summary>
        [Fact]
        public void IsBuyTest()
        {
            // TODO unit test for the property 'IsBuy'
        }
        /// <summary>
        /// Test the property 'UnrealisedPnL'
        /// </summary>
        [Fact]
        public void UnrealisedPnLTest()
        {
            // TODO unit test for the property 'UnrealisedPnL'
        }
        /// <summary>
        /// Test the property 'Leverage'
        /// </summary>
        [Fact]
        public void LeverageTest()
        {
            // TODO unit test for the property 'Leverage'
        }
        /// <summary>
        /// Test the property 'CrossMargin'
        /// </summary>
        [Fact]
        public void CrossMarginTest()
        {
            // TODO unit test for the property 'CrossMargin'
        }
        /// <summary>
        /// Test the property 'LiquidationPrice'
        /// </summary>
        [Fact]
        public void LiquidationPriceTest()
        {
            // TODO unit test for the property 'LiquidationPrice'
        }
        /// <summary>
        /// Test the property 'RawData'
        /// </summary>
        [Fact]
        public void RawDataTest()
        {
            // TODO unit test for the property 'RawData'
        }

    }

}

/*
 * OEML - REST API
 *
 * This section will provide necessary information about the `CoinAPI OEML REST API` protocol. 
 *
 * API version: v1
 * Contact: support@coinapi.io
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi
// OrderExecutionReport The order execution report object.
type OrderExecutionReport struct {
	// Exchange identifier.
	ExchangeId string `json:"exchange_id"`
	// The unique identifier of the order assigned by the client.
	ClientOrderId string `json:"client_order_id"`
	// Exchange symbol. One of the properties (`symbol_id_exchange`, `symbol_id_coinapi`) is required to identify the market for the new order.
	SymbolIdExchange string `json:"symbol_id_exchange,omitempty"`
	// CoinAPI symbol. One of the properties (`symbol_id_exchange`, `symbol_id_coinapi`) is required to identify the market for the new order.
	SymbolIdCoinapi string `json:"symbol_id_coinapi,omitempty"`
	// Order quantity.
	AmountOrder float32 `json:"amount_order"`
	// Order price.
	Price float32 `json:"price"`
	Side OrdSide `json:"side"`
	OrderType OrdType `json:"order_type"`
	TimeInForce TimeInForce `json:"time_in_force"`
	// Expiration time. Conditionaly required for orders with time_in_force = `GOOD_TILL_TIME_EXCHANGE` or `GOOD_TILL_TIME_OEML`.
	ExpireTime string `json:"expire_time,omitempty"`
	// Order execution instructions are documented in the separate section: <a href=\"#oeml-order-params-exec\">OEML / Starter Guide / Order parameters / Execution instructions</a> 
	ExecInst []string `json:"exec_inst,omitempty"`
	// The unique identifier of the order assigned by the client converted to the exchange order tag format for the purpose of tracking it.
	ClientOrderIdFormatExchange string `json:"client_order_id_format_exchange"`
	// The unique identifier of the order assigned by the exchange.
	ExchangeOrderId string `json:"exchange_order_id,omitempty"`
	// Amount open.
	AmountOpen float32 `json:"amount_open"`
	// Amount filled.
	AmountFilled float32 `json:"amount_filled"`
	Status OrdStatus `json:"status"`
	// Timestamped history of order status changes.
	TimeOrder [][]string `json:"time_order"`
	// Error message
	ErrorMessage string `json:"error_message,omitempty"`
}

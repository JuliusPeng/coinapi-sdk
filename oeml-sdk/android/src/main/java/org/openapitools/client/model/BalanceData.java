/**
 * OEML - REST API
 * This section will provide necessary information about the `CoinAPI OEML REST API` protocol. 
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class BalanceData {
  
  @SerializedName("asset_id_exchange")
  private String assetIdExchange = null;
  @SerializedName("asset_id_coinapi")
  private String assetIdCoinapi = null;
  @SerializedName("balance")
  private Float balance = null;
  @SerializedName("available")
  private Float available = null;
  @SerializedName("locked")
  private Float locked = null;
  public enum LastUpdatedByEnum {
     INITIALIZATION,  BALANCE_MANAGER,  EXCHANGE, 
  };
  @SerializedName("last_updated_by")
  private LastUpdatedByEnum lastUpdatedBy = null;
  @SerializedName("rate_usd")
  private Float rateUsd = null;

  /**
   * Exchange currency code.
   **/
  @ApiModelProperty(value = "Exchange currency code.")
  public String getAssetIdExchange() {
    return assetIdExchange;
  }
  public void setAssetIdExchange(String assetIdExchange) {
    this.assetIdExchange = assetIdExchange;
  }

  /**
   * CoinAPI currency code.
   **/
  @ApiModelProperty(value = "CoinAPI currency code.")
  public String getAssetIdCoinapi() {
    return assetIdCoinapi;
  }
  public void setAssetIdCoinapi(String assetIdCoinapi) {
    this.assetIdCoinapi = assetIdCoinapi;
  }

  /**
   * Value of the current total currency balance on the exchange.
   **/
  @ApiModelProperty(value = "Value of the current total currency balance on the exchange.")
  public Float getBalance() {
    return balance;
  }
  public void setBalance(Float balance) {
    this.balance = balance;
  }

  /**
   * Value of the current available currency balance on the exchange that can be used as collateral.
   **/
  @ApiModelProperty(value = "Value of the current available currency balance on the exchange that can be used as collateral.")
  public Float getAvailable() {
    return available;
  }
  public void setAvailable(Float available) {
    this.available = available;
  }

  /**
   * Value of the current locked currency balance by the exchange.
   **/
  @ApiModelProperty(value = "Value of the current locked currency balance by the exchange.")
  public Float getLocked() {
    return locked;
  }
  public void setLocked(Float locked) {
    this.locked = locked;
  }

  /**
   * Source of the last modification. 
   **/
  @ApiModelProperty(value = "Source of the last modification. ")
  public LastUpdatedByEnum getLastUpdatedBy() {
    return lastUpdatedBy;
  }
  public void setLastUpdatedBy(LastUpdatedByEnum lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
  }

  /**
   * Current exchange rate to the USD for the single unit of the currency. 
   **/
  @ApiModelProperty(value = "Current exchange rate to the USD for the single unit of the currency. ")
  public Float getRateUsd() {
    return rateUsd;
  }
  public void setRateUsd(Float rateUsd) {
    this.rateUsd = rateUsd;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BalanceData balanceData = (BalanceData) o;
    return (this.assetIdExchange == null ? balanceData.assetIdExchange == null : this.assetIdExchange.equals(balanceData.assetIdExchange)) &&
        (this.assetIdCoinapi == null ? balanceData.assetIdCoinapi == null : this.assetIdCoinapi.equals(balanceData.assetIdCoinapi)) &&
        (this.balance == null ? balanceData.balance == null : this.balance.equals(balanceData.balance)) &&
        (this.available == null ? balanceData.available == null : this.available.equals(balanceData.available)) &&
        (this.locked == null ? balanceData.locked == null : this.locked.equals(balanceData.locked)) &&
        (this.lastUpdatedBy == null ? balanceData.lastUpdatedBy == null : this.lastUpdatedBy.equals(balanceData.lastUpdatedBy)) &&
        (this.rateUsd == null ? balanceData.rateUsd == null : this.rateUsd.equals(balanceData.rateUsd));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.assetIdExchange == null ? 0: this.assetIdExchange.hashCode());
    result = 31 * result + (this.assetIdCoinapi == null ? 0: this.assetIdCoinapi.hashCode());
    result = 31 * result + (this.balance == null ? 0: this.balance.hashCode());
    result = 31 * result + (this.available == null ? 0: this.available.hashCode());
    result = 31 * result + (this.locked == null ? 0: this.locked.hashCode());
    result = 31 * result + (this.lastUpdatedBy == null ? 0: this.lastUpdatedBy.hashCode());
    result = 31 * result + (this.rateUsd == null ? 0: this.rateUsd.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class BalanceData {\n");
    
    sb.append("  assetIdExchange: ").append(assetIdExchange).append("\n");
    sb.append("  assetIdCoinapi: ").append(assetIdCoinapi).append("\n");
    sb.append("  balance: ").append(balance).append("\n");
    sb.append("  available: ").append(available).append("\n");
    sb.append("  locked: ").append(locked).append("\n");
    sb.append("  lastUpdatedBy: ").append(lastUpdatedBy).append("\n");
    sb.append("  rateUsd: ").append(rateUsd).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

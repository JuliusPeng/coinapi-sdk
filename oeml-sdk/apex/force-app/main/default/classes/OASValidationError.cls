/*
 * OEML - REST API
 * This section will provide necessary information about the `CoinAPI OEML REST API` protocol.\n
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASValidationError
 */
public class OASValidationError implements OAS.MappedProperties {
    /**
     * Get r_type
     * @return r_type
     */
    public String r_type { get; set; }

    /**
     * Get title
     * @return title
     */
    public String title { get; set; }

    /**
     * Get status
     * @return status
     */
    public Double status { get; set; }

    /**
     * Get traceId
     * @return traceId
     */
    public String traceId { get; set; }

    /**
     * Get errors
     * @return errors
     */
    public String errors { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'type' => 'r_type'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASValidationError getExample() {
        OASValidationError validationError = new OASValidationError();
          validationError.r_type = 'https://tools.ietf.org/html/rfc7231#section-6.5.1';
          validationError.title = 'One or more validation errors occurred.';
          validationError.status = 400;
          validationError.traceId = 'd200e8b5-4271a5461ce5342f';
          validationError.errors = '';
        return validationError;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASValidationError) {           
            OASValidationError validationError = (OASValidationError) obj;
            return this.r_type == validationError.r_type
                && this.title == validationError.title
                && this.status == validationError.status
                && this.traceId == validationError.traceId
                && this.errors == validationError.errors;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (r_type == null ? 0 : System.hashCode(r_type));
        hashCode = (17 * hashCode) + (title == null ? 0 : System.hashCode(title));
        hashCode = (17 * hashCode) + (status == null ? 0 : System.hashCode(status));
        hashCode = (17 * hashCode) + (traceId == null ? 0 : System.hashCode(traceId));
        hashCode = (17 * hashCode) + (errors == null ? 0 : System.hashCode(errors));
        return hashCode;
    }
}


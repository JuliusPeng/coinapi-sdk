/*
 * OEML - REST API
 * This section will provide necessary information about the `CoinAPI OEML REST API` protocol.\n
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASBalanceData
 */
public class OASBalanceData implements OAS.MappedProperties {
    /**
     * symbol_exchange
     * @return id
     */
    public String id { get; set; }

    /**
     * Currency code.
     * @return symbolExchange
     */
    public String symbolExchange { get; set; }

    /**
     * CoinAPI currency code.
     * @return symbolCoinapi
     */
    public String symbolCoinapi { get; set; }

    /**
     * The current balance.
     * @return balance
     */
    public Double balance { get; set; }

    /**
     * The amount that is available to trade.
     * @return available
     */
    public Double available { get; set; }

    /**
     * Blocked funds.
     * @return locked
     */
    public Double locked { get; set; }

    /**
     * Source of last modification.\n
     */
    public enum UpdateOriginEnum {
        INITIALIZATION,
        BALANCE_MANAGER,
        EXCHANGE
    }

    /**
     * Source of last modification.\n
     * @return updateOrigin
     */
    public UpdateOriginEnum updateOrigin { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'symbol_exchange' => 'symbolExchange',
        'symbol_coinapi' => 'symbolCoinapi',
        'update_origin' => 'updateOrigin'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASBalanceData getExample() {
        OASBalanceData balanceData = new OASBalanceData();
          balanceData.id = 'BTC';
          balanceData.symbolExchange = 'BTC';
          balanceData.symbolCoinapi = 'BTC';
          balanceData.balance = 0.00134444;
          balanceData.available = 0.00134444;
          balanceData.locked = 0.0;
          balanceData.updateOrigin = UpdateOriginEnum.EXCHANGE;
        return balanceData;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASBalanceData) {           
            OASBalanceData balanceData = (OASBalanceData) obj;
            return this.id == balanceData.id
                && this.symbolExchange == balanceData.symbolExchange
                && this.symbolCoinapi == balanceData.symbolCoinapi
                && this.balance == balanceData.balance
                && this.available == balanceData.available
                && this.locked == balanceData.locked
                && this.updateOrigin == balanceData.updateOrigin;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (symbolExchange == null ? 0 : System.hashCode(symbolExchange));
        hashCode = (17 * hashCode) + (symbolCoinapi == null ? 0 : System.hashCode(symbolCoinapi));
        hashCode = (17 * hashCode) + (balance == null ? 0 : System.hashCode(balance));
        hashCode = (17 * hashCode) + (available == null ? 0 : System.hashCode(available));
        hashCode = (17 * hashCode) + (locked == null ? 0 : System.hashCode(locked));
        hashCode = (17 * hashCode) + (updateOrigin == null ? 0 : System.hashCode(updateOrigin));
        return hashCode;
    }
}


{-
   OEML - REST API
   This section will provide necessary information about the `CoinAPI OEML REST API` protocol. 

   The version of the OpenAPI document: v1
   Contact: support@coinapi.io

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.CancelOrderSingleRequest exposing (CancelOrderSingleRequest, decoder, encode, encodeWithTag, toString)

import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


{-| Cancel single order request object.
-}
type alias CancelOrderSingleRequest =
    { exchangeId : String
    , exchangeOrderId : Maybe (String)
    , clientOrderId : Maybe (String)
    }


decoder : Decoder CancelOrderSingleRequest
decoder =
    Decode.succeed CancelOrderSingleRequest
        |> required "exchange_id" Decode.string
        |> optional "exchange_order_id" (Decode.nullable Decode.string) Nothing
        |> optional "client_order_id" (Decode.nullable Decode.string) Nothing



encode : CancelOrderSingleRequest -> Encode.Value
encode =
    Encode.object << encodePairs


encodeWithTag : ( String, String ) -> CancelOrderSingleRequest -> Encode.Value
encodeWithTag (tagField, tag) model =
    Encode.object <| encodePairs model ++ [ ( tagField, Encode.string tag ) ]


encodePairs : CancelOrderSingleRequest -> List (String, Encode.Value)
encodePairs model =
    [ ( "exchange_id", Encode.string model.exchangeId )
    , ( "exchange_order_id", Maybe.withDefault Encode.null (Maybe.map Encode.string model.exchangeOrderId) )
    , ( "client_order_id", Maybe.withDefault Encode.null (Maybe.map Encode.string model.clientOrderId) )
    ]



toString : CancelOrderSingleRequest -> String
toString =
    Encode.encode 0 << encode





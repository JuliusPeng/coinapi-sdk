{-
   OEML - REST API
   This section will provide necessary information about the `CoinAPI OEML REST API` protocol. 

   The version of the OpenAPI document: v1

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.Severity exposing (Severity(..), decoder, encode, toString)

import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


{-| Severity of the message.
-}
type Severity
    = INFO
    | WARNING
    | ERROR



decoder : Decoder Severity
decoder =
    Decode.string
        |> Decode.andThen
            (\str ->
                case str of
                    "INFO" ->
                        Decode.succeed INFO

                    "WARNING" ->
                        Decode.succeed WARNING

                    "ERROR" ->
                        Decode.succeed ERROR

                    other ->
                        Decode.fail <| "Unknown type: " ++ other
            )



encode : Severity -> Encode.Value
encode model =
    case model of
        INFO ->
            Encode.string "INFO"

        WARNING ->
            Encode.string "WARNING"

        ERROR ->
            Encode.string "ERROR"




toString : Severity -> String
toString model =
    case model of
        INFO ->
            "INFO"

        WARNING ->
            "WARNING"

        ERROR ->
            "ERROR"




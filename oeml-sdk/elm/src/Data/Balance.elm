{-
   OEML - REST API
   This section will provide necessary information about the `CoinAPI OEML REST API` protocol. 

   The version of the OpenAPI document: v1
   Contact: support@coinapi.io

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.Balance exposing (Balance, decoder, encode, encodeWithTag, toString)

import Data.BalanceData as BalanceData exposing (BalanceData)
import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


type alias Balance =
    { exchangeId : Maybe (String)
    , data : Maybe ((List BalanceData))
    }


decoder : Decoder Balance
decoder =
    Decode.succeed Balance
        |> optional "exchange_id" (Decode.nullable Decode.string) Nothing
        |> optional "data" (Decode.nullable (Decode.list BalanceData.decoder)) Nothing



encode : Balance -> Encode.Value
encode =
    Encode.object << encodePairs


encodeWithTag : ( String, String ) -> Balance -> Encode.Value
encodeWithTag (tagField, tag) model =
    Encode.object <| encodePairs model ++ [ ( tagField, Encode.string tag ) ]


encodePairs : Balance -> List (String, Encode.Value)
encodePairs model =
    [ ( "exchange_id", Maybe.withDefault Encode.null (Maybe.map Encode.string model.exchangeId) )
    , ( "data", Maybe.withDefault Encode.null (Maybe.map (Encode.list BalanceData.encode) model.data) )
    ]



toString : Balance -> String
toString =
    Encode.encode 0 << encode





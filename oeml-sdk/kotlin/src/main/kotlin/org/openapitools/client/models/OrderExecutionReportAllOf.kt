/**
* OEML - REST API
* This section will provide necessary information about the `CoinAPI OEML REST API` protocol. This API is also available in the Postman application: <a href=\"https://postman.coinapi.io/\" target=\"_blank\">https://postman.coinapi.io/</a>       
*
* The version of the OpenAPI document: v1
* Contact: support@coinapi.io
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models

import org.openapitools.client.models.OrdStatus

import com.squareup.moshi.Json
/**
 * The order execution report message.
 * @param clientOrderIdFormatExchange The unique identifier of the order assigned by the client converted to the exchange order tag format for the purpose of tracking it.
 * @param amountOpen Quantity open for further execution. `amount_open` = `amount_order` - `amount_filled`
 * @param amountFilled Total quantity filled.
 * @param status 
 * @param timeOrder Timestamped history of order status changes.
 * @param exchangeOrderId Unique identifier of the order assigned by the exchange or executing system.
 * @param errorMessage Error message
 */

data class OrderExecutionReportAllOf (
    /* The unique identifier of the order assigned by the client converted to the exchange order tag format for the purpose of tracking it. */
    @Json(name = "client_order_id_format_exchange")
    val clientOrderIdFormatExchange: kotlin.String,
    /* Quantity open for further execution. `amount_open` = `amount_order` - `amount_filled` */
    @Json(name = "amount_open")
    val amountOpen: java.math.BigDecimal,
    /* Total quantity filled. */
    @Json(name = "amount_filled")
    val amountFilled: java.math.BigDecimal,
    @Json(name = "status")
    val status: OrdStatus,
    /* Timestamped history of order status changes. */
    @Json(name = "time_order")
    val timeOrder: kotlin.Array<kotlin.Array<kotlin.String>>,
    /* Unique identifier of the order assigned by the exchange or executing system. */
    @Json(name = "exchange_order_id")
    val exchangeOrderId: kotlin.String? = null,
    /* Error message */
    @Json(name = "error_message")
    val errorMessage: kotlin.String? = null
)


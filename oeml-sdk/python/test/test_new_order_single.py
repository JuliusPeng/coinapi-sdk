# coding: utf-8

"""
    OEML - REST API

    This section will provide necessary information about the `CoinAPI OEML REST API` protocol.   # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.new_order_single import NewOrderSingle  # noqa: E501
from openapi_client.rest import ApiException

class TestNewOrderSingle(unittest.TestCase):
    """NewOrderSingle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test NewOrderSingle
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.new_order_single.NewOrderSingle()  # noqa: E501
        if include_optional :
            return NewOrderSingle(
                exchange_id = 'KRAKEN', 
                client_order_id = 'KPP-222389382-AQ', 
                symbol_exchange = 'BTCUSD', 
                symbol_coinapi = 'KRAKEN_SPOT_BTC_USD', 
                amount_order = 0.045, 
                price = 0.0783, 
                side = 'BUY', 
                order_type = 'LIMIT', 
                time_in_force = 'GOOD_TILL_CANCEL', 
                expire_time = null, 
                exec_inst = MAKER_OR_CANCEL
            )
        else :
            return NewOrderSingle(
                exchange_id = 'KRAKEN',
                client_order_id = 'KPP-222389382-AQ',
                amount_order = 0.045,
                price = 0.0783,
                side = 'BUY',
                order_type = 'LIMIT',
                time_in_force = 'GOOD_TILL_CANCEL',
        )

    def testNewOrderSingle(self):
        """Test NewOrderSingle"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

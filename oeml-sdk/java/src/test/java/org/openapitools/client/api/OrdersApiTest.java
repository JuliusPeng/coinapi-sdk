/*
 * OEML - REST API
 * This section will provide necessary information about the `CoinAPI OEML REST API` protocol. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateOrderValidationError;
import org.openapitools.client.model.ExecutionReport;
import org.openapitools.client.model.Message;
import org.openapitools.client.model.NewOrder;
import org.openapitools.client.model.Order;
import org.openapitools.client.model.OrderCancelAllRequest;
import org.openapitools.client.model.OrderCancelSingleRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrdersApi
 */
@Ignore
public class OrdersApiTest {

    private final OrdersApi api = new OrdersApi();

    
    /**
     * Cancel all orders
     *
     * This request cancels all open orders across all or single specified exchange.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1OrdersCancelAllPostTest() throws ApiException {
        OrderCancelAllRequest orderCancelAllRequest = null;
        Message response = api.v1OrdersCancelAllPost(orderCancelAllRequest);

        // TODO: test validations
    }
    
    /**
     * Cancel order
     *
     * This request cancels an existing order. The order can be canceled by the client order ID or exchange order ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1OrdersCancelPostTest() throws ApiException {
        OrderCancelSingleRequest orderCancelSingleRequest = null;
        ExecutionReport response = api.v1OrdersCancelPost(orderCancelSingleRequest);

        // TODO: test validations
    }
    
    /**
     * Get all orders
     *
     * Get all current open orders across all or single specified exchange.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1OrdersGetTest() throws ApiException {
        String exchangeId = null;
        List<Order> response = api.v1OrdersGet(exchangeId);

        // TODO: test validations
    }
    
    /**
     * Create new order
     *
     * This request creating new order for the specific exchange.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1OrdersPostTest() throws ApiException {
        NewOrder newOrder = null;
        ExecutionReport response = api.v1OrdersPost(newOrder);

        // TODO: test validations
    }
    
    /**
     * Get order status
     *
     * Get the current order status for the specified order. The requested order can no longer be active.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1OrdersStatusClientOrderIdGetTest() throws ApiException {
        String clientOrderId = null;
        ExecutionReport response = api.v1OrdersStatusClientOrderIdGet(clientOrderId);

        // TODO: test validations
    }
    
}

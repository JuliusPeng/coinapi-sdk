note
 description:"[
		OEML - REST API
 		This section will provide necessary information about the `CoinAPI OEML REST API` protocol. 
  		The version of the OpenAPI document: v1
 	    Contact: support@coinapi.io

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class BALANCE_DATA 

inherit

  ANY
      redefine
          out 
      end


feature --Access

    symbol_exchange: detachable STRING_32 
      -- Exchange currency code.
    symbol_coinapi: detachable STRING_32 
      -- CoinAPI currency code.
    balance: REAL_32 
      -- Value of the current total currency balance on the exchange.
    available: REAL_32 
      -- Value of the current available currency balance on the exchange that can be used as collateral.
    locked: REAL_32 
      -- Value of the current locked currency balance by the exchange.
    update_origin: detachable STRING_32 
      -- Source of the last modification. 

feature -- Change Element  
 
    set_symbol_exchange (a_name: like symbol_exchange)
        -- Set 'symbol_exchange' with 'a_name'.
      do
        symbol_exchange := a_name
      ensure
        symbol_exchange_set: symbol_exchange = a_name		
      end

    set_symbol_coinapi (a_name: like symbol_coinapi)
        -- Set 'symbol_coinapi' with 'a_name'.
      do
        symbol_coinapi := a_name
      ensure
        symbol_coinapi_set: symbol_coinapi = a_name		
      end

    set_balance (a_name: like balance)
        -- Set 'balance' with 'a_name'.
      do
        balance := a_name
      ensure
        balance_set: balance = a_name		
      end

    set_available (a_name: like available)
        -- Set 'available' with 'a_name'.
      do
        available := a_name
      ensure
        available_set: available = a_name		
      end

    set_locked (a_name: like locked)
        -- Set 'locked' with 'a_name'.
      do
        locked := a_name
      ensure
        locked_set: locked = a_name		
      end

    set_update_origin (a_name: like update_origin)
        -- Set 'update_origin' with 'a_name'.
      do
        update_origin := a_name
      ensure
        update_origin_set: update_origin = a_name		
      end


 feature -- Status Report

    out: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass BALANCE_DATA%N")
        if attached symbol_exchange as l_symbol_exchange then
          Result.append ("%Nsymbol_exchange:")
          Result.append (l_symbol_exchange.out)
          Result.append ("%N")    
        end  
        if attached symbol_coinapi as l_symbol_coinapi then
          Result.append ("%Nsymbol_coinapi:")
          Result.append (l_symbol_coinapi.out)
          Result.append ("%N")    
        end  
        if attached balance as l_balance then
          Result.append ("%Nbalance:")
          Result.append (l_balance.out)
          Result.append ("%N")    
        end  
        if attached available as l_available then
          Result.append ("%Navailable:")
          Result.append (l_available.out)
          Result.append ("%N")    
        end  
        if attached locked as l_locked then
          Result.append ("%Nlocked:")
          Result.append (l_locked.out)
          Result.append ("%N")    
        end  
        if attached update_origin as l_update_origin then
          Result.append ("%Nupdate_origin:")
          Result.append (l_update_origin.out)
          Result.append ("%N")    
        end  
      end
end



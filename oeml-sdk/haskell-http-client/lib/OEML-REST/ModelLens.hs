{-
   OEML - REST API

   This section will provide necessary information about the `CoinAPI OEML REST API` protocol. 

   OpenAPI Version: 3.0.0
   OEML - REST API API version: v1
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OEML-REST.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OEML-REST.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import OEML-REST.Model
import OEML-REST.Core


-- * Balance

-- | 'balanceType' Lens
balanceTypeL :: Lens_' Balance (Maybe Text)
balanceTypeL f Balance{..} = (\balanceType -> Balance { balanceType, ..} ) <$> f balanceType
{-# INLINE balanceTypeL #-}

-- | 'balanceExchangeName' Lens
balanceExchangeNameL :: Lens_' Balance (Maybe Text)
balanceExchangeNameL f Balance{..} = (\balanceExchangeName -> Balance { balanceExchangeName, ..} ) <$> f balanceExchangeName
{-# INLINE balanceExchangeNameL #-}

-- | 'balanceData' Lens
balanceDataL :: Lens_' Balance (Maybe [BalanceData])
balanceDataL f Balance{..} = (\balanceData -> Balance { balanceData, ..} ) <$> f balanceData
{-# INLINE balanceDataL #-}



-- * BalanceData

-- | 'balanceDataId' Lens
balanceDataIdL :: Lens_' BalanceData (Maybe Text)
balanceDataIdL f BalanceData{..} = (\balanceDataId -> BalanceData { balanceDataId, ..} ) <$> f balanceDataId
{-# INLINE balanceDataIdL #-}

-- | 'balanceDataSymbolExchange' Lens
balanceDataSymbolExchangeL :: Lens_' BalanceData (Maybe Text)
balanceDataSymbolExchangeL f BalanceData{..} = (\balanceDataSymbolExchange -> BalanceData { balanceDataSymbolExchange, ..} ) <$> f balanceDataSymbolExchange
{-# INLINE balanceDataSymbolExchangeL #-}

-- | 'balanceDataSymbolCoinapi' Lens
balanceDataSymbolCoinapiL :: Lens_' BalanceData (Maybe Text)
balanceDataSymbolCoinapiL f BalanceData{..} = (\balanceDataSymbolCoinapi -> BalanceData { balanceDataSymbolCoinapi, ..} ) <$> f balanceDataSymbolCoinapi
{-# INLINE balanceDataSymbolCoinapiL #-}

-- | 'balanceDataBalance' Lens
balanceDataBalanceL :: Lens_' BalanceData (Maybe Float)
balanceDataBalanceL f BalanceData{..} = (\balanceDataBalance -> BalanceData { balanceDataBalance, ..} ) <$> f balanceDataBalance
{-# INLINE balanceDataBalanceL #-}

-- | 'balanceDataAvailable' Lens
balanceDataAvailableL :: Lens_' BalanceData (Maybe Float)
balanceDataAvailableL f BalanceData{..} = (\balanceDataAvailable -> BalanceData { balanceDataAvailable, ..} ) <$> f balanceDataAvailable
{-# INLINE balanceDataAvailableL #-}

-- | 'balanceDataLocked' Lens
balanceDataLockedL :: Lens_' BalanceData (Maybe Float)
balanceDataLockedL f BalanceData{..} = (\balanceDataLocked -> BalanceData { balanceDataLocked, ..} ) <$> f balanceDataLocked
{-# INLINE balanceDataLockedL #-}

-- | 'balanceDataUpdateOrigin' Lens
balanceDataUpdateOriginL :: Lens_' BalanceData (Maybe E'UpdateOrigin)
balanceDataUpdateOriginL f BalanceData{..} = (\balanceDataUpdateOrigin -> BalanceData { balanceDataUpdateOrigin, ..} ) <$> f balanceDataUpdateOrigin
{-# INLINE balanceDataUpdateOriginL #-}



-- * CreateOrderValidationError

-- | 'createOrderValidationErrorType' Lens
createOrderValidationErrorTypeL :: Lens_' CreateOrderValidationError (Maybe Text)
createOrderValidationErrorTypeL f CreateOrderValidationError{..} = (\createOrderValidationErrorType -> CreateOrderValidationError { createOrderValidationErrorType, ..} ) <$> f createOrderValidationErrorType
{-# INLINE createOrderValidationErrorTypeL #-}

-- | 'createOrderValidationErrorTitle' Lens
createOrderValidationErrorTitleL :: Lens_' CreateOrderValidationError (Maybe Text)
createOrderValidationErrorTitleL f CreateOrderValidationError{..} = (\createOrderValidationErrorTitle -> CreateOrderValidationError { createOrderValidationErrorTitle, ..} ) <$> f createOrderValidationErrorTitle
{-# INLINE createOrderValidationErrorTitleL #-}

-- | 'createOrderValidationErrorStatus' Lens
createOrderValidationErrorStatusL :: Lens_' CreateOrderValidationError (Maybe Double)
createOrderValidationErrorStatusL f CreateOrderValidationError{..} = (\createOrderValidationErrorStatus -> CreateOrderValidationError { createOrderValidationErrorStatus, ..} ) <$> f createOrderValidationErrorStatus
{-# INLINE createOrderValidationErrorStatusL #-}

-- | 'createOrderValidationErrorTraceId' Lens
createOrderValidationErrorTraceIdL :: Lens_' CreateOrderValidationError (Maybe Text)
createOrderValidationErrorTraceIdL f CreateOrderValidationError{..} = (\createOrderValidationErrorTraceId -> CreateOrderValidationError { createOrderValidationErrorTraceId, ..} ) <$> f createOrderValidationErrorTraceId
{-# INLINE createOrderValidationErrorTraceIdL #-}

-- | 'createOrderValidationErrorErrors' Lens
createOrderValidationErrorErrorsL :: Lens_' CreateOrderValidationError (Maybe Text)
createOrderValidationErrorErrorsL f CreateOrderValidationError{..} = (\createOrderValidationErrorErrors -> CreateOrderValidationError { createOrderValidationErrorErrors, ..} ) <$> f createOrderValidationErrorErrors
{-# INLINE createOrderValidationErrorErrorsL #-}



-- * ExecutionReport

-- | 'executionReportType' Lens
executionReportTypeL :: Lens_' ExecutionReport (Maybe Text)
executionReportTypeL f ExecutionReport{..} = (\executionReportType -> ExecutionReport { executionReportType, ..} ) <$> f executionReportType
{-# INLINE executionReportTypeL #-}

-- | 'executionReportExchangeId' Lens
executionReportExchangeIdL :: Lens_' ExecutionReport (Maybe Text)
executionReportExchangeIdL f ExecutionReport{..} = (\executionReportExchangeId -> ExecutionReport { executionReportExchangeId, ..} ) <$> f executionReportExchangeId
{-# INLINE executionReportExchangeIdL #-}

-- | 'executionReportId' Lens
executionReportIdL :: Lens_' ExecutionReport (Maybe Text)
executionReportIdL f ExecutionReport{..} = (\executionReportId -> ExecutionReport { executionReportId, ..} ) <$> f executionReportId
{-# INLINE executionReportIdL #-}

-- | 'executionReportClientOrderIdFormatExchange' Lens
executionReportClientOrderIdFormatExchangeL :: Lens_' ExecutionReport (Maybe Text)
executionReportClientOrderIdFormatExchangeL f ExecutionReport{..} = (\executionReportClientOrderIdFormatExchange -> ExecutionReport { executionReportClientOrderIdFormatExchange, ..} ) <$> f executionReportClientOrderIdFormatExchange
{-# INLINE executionReportClientOrderIdFormatExchangeL #-}

-- | 'executionReportExchangeOrderId' Lens
executionReportExchangeOrderIdL :: Lens_' ExecutionReport (Maybe Text)
executionReportExchangeOrderIdL f ExecutionReport{..} = (\executionReportExchangeOrderId -> ExecutionReport { executionReportExchangeOrderId, ..} ) <$> f executionReportExchangeOrderId
{-# INLINE executionReportExchangeOrderIdL #-}

-- | 'executionReportAmountOpen' Lens
executionReportAmountOpenL :: Lens_' ExecutionReport (Maybe Double)
executionReportAmountOpenL f ExecutionReport{..} = (\executionReportAmountOpen -> ExecutionReport { executionReportAmountOpen, ..} ) <$> f executionReportAmountOpen
{-# INLINE executionReportAmountOpenL #-}

-- | 'executionReportAmountFilled' Lens
executionReportAmountFilledL :: Lens_' ExecutionReport (Maybe Double)
executionReportAmountFilledL f ExecutionReport{..} = (\executionReportAmountFilled -> ExecutionReport { executionReportAmountFilled, ..} ) <$> f executionReportAmountFilled
{-# INLINE executionReportAmountFilledL #-}

-- | 'executionReportStatus' Lens
executionReportStatusL :: Lens_' ExecutionReport (Maybe OrdStatus)
executionReportStatusL f ExecutionReport{..} = (\executionReportStatus -> ExecutionReport { executionReportStatus, ..} ) <$> f executionReportStatus
{-# INLINE executionReportStatusL #-}

-- | 'executionReportTimeOrder' Lens
executionReportTimeOrderL :: Lens_' ExecutionReport (Maybe [[Text]])
executionReportTimeOrderL f ExecutionReport{..} = (\executionReportTimeOrder -> ExecutionReport { executionReportTimeOrder, ..} ) <$> f executionReportTimeOrder
{-# INLINE executionReportTimeOrderL #-}

-- | 'executionReportErrorMessage' Lens
executionReportErrorMessageL :: Lens_' ExecutionReport (Maybe Text)
executionReportErrorMessageL f ExecutionReport{..} = (\executionReportErrorMessage -> ExecutionReport { executionReportErrorMessage, ..} ) <$> f executionReportErrorMessage
{-# INLINE executionReportErrorMessageL #-}

-- | 'executionReportClientOrderId' Lens
executionReportClientOrderIdL :: Lens_' ExecutionReport (Maybe Text)
executionReportClientOrderIdL f ExecutionReport{..} = (\executionReportClientOrderId -> ExecutionReport { executionReportClientOrderId, ..} ) <$> f executionReportClientOrderId
{-# INLINE executionReportClientOrderIdL #-}

-- | 'executionReportSymbolExchange' Lens
executionReportSymbolExchangeL :: Lens_' ExecutionReport (Maybe Text)
executionReportSymbolExchangeL f ExecutionReport{..} = (\executionReportSymbolExchange -> ExecutionReport { executionReportSymbolExchange, ..} ) <$> f executionReportSymbolExchange
{-# INLINE executionReportSymbolExchangeL #-}

-- | 'executionReportSymbolCoinapi' Lens
executionReportSymbolCoinapiL :: Lens_' ExecutionReport (Maybe Text)
executionReportSymbolCoinapiL f ExecutionReport{..} = (\executionReportSymbolCoinapi -> ExecutionReport { executionReportSymbolCoinapi, ..} ) <$> f executionReportSymbolCoinapi
{-# INLINE executionReportSymbolCoinapiL #-}

-- | 'executionReportAmountOrder' Lens
executionReportAmountOrderL :: Lens_' ExecutionReport (Maybe Double)
executionReportAmountOrderL f ExecutionReport{..} = (\executionReportAmountOrder -> ExecutionReport { executionReportAmountOrder, ..} ) <$> f executionReportAmountOrder
{-# INLINE executionReportAmountOrderL #-}

-- | 'executionReportPrice' Lens
executionReportPriceL :: Lens_' ExecutionReport (Maybe Double)
executionReportPriceL f ExecutionReport{..} = (\executionReportPrice -> ExecutionReport { executionReportPrice, ..} ) <$> f executionReportPrice
{-# INLINE executionReportPriceL #-}

-- | 'executionReportSide' Lens
executionReportSideL :: Lens_' ExecutionReport (Maybe E'Side)
executionReportSideL f ExecutionReport{..} = (\executionReportSide -> ExecutionReport { executionReportSide, ..} ) <$> f executionReportSide
{-# INLINE executionReportSideL #-}

-- | 'executionReportOrderType' Lens
executionReportOrderTypeL :: Lens_' ExecutionReport (Maybe E'OrderType)
executionReportOrderTypeL f ExecutionReport{..} = (\executionReportOrderType -> ExecutionReport { executionReportOrderType, ..} ) <$> f executionReportOrderType
{-# INLINE executionReportOrderTypeL #-}

-- | 'executionReportTimeInForce' Lens
executionReportTimeInForceL :: Lens_' ExecutionReport (Maybe TimeInForce)
executionReportTimeInForceL f ExecutionReport{..} = (\executionReportTimeInForce -> ExecutionReport { executionReportTimeInForce, ..} ) <$> f executionReportTimeInForce
{-# INLINE executionReportTimeInForceL #-}

-- | 'executionReportExpireTime' Lens
executionReportExpireTimeL :: Lens_' ExecutionReport (Maybe Date)
executionReportExpireTimeL f ExecutionReport{..} = (\executionReportExpireTime -> ExecutionReport { executionReportExpireTime, ..} ) <$> f executionReportExpireTime
{-# INLINE executionReportExpireTimeL #-}

-- | 'executionReportExecInst' Lens
executionReportExecInstL :: Lens_' ExecutionReport (Maybe [E'ExecInst])
executionReportExecInstL f ExecutionReport{..} = (\executionReportExecInst -> ExecutionReport { executionReportExecInst, ..} ) <$> f executionReportExecInst
{-# INLINE executionReportExecInstL #-}



-- * Message

-- | 'messageType' Lens
messageTypeL :: Lens_' Message (Maybe Text)
messageTypeL f Message{..} = (\messageType -> Message { messageType, ..} ) <$> f messageType
{-# INLINE messageTypeL #-}

-- | 'messageSeverity' Lens
messageSeverityL :: Lens_' Message (Maybe Severity)
messageSeverityL f Message{..} = (\messageSeverity -> Message { messageSeverity, ..} ) <$> f messageSeverity
{-# INLINE messageSeverityL #-}

-- | 'messageExchangeId' Lens
messageExchangeIdL :: Lens_' Message (Maybe Text)
messageExchangeIdL f Message{..} = (\messageExchangeId -> Message { messageExchangeId, ..} ) <$> f messageExchangeId
{-# INLINE messageExchangeIdL #-}

-- | 'messageMessage' Lens
messageMessageL :: Lens_' Message (Maybe Text)
messageMessageL f Message{..} = (\messageMessage -> Message { messageMessage, ..} ) <$> f messageMessage
{-# INLINE messageMessageL #-}



-- * NewOrder

-- | 'newOrderExchangeId' Lens
newOrderExchangeIdL :: Lens_' NewOrder (Text)
newOrderExchangeIdL f NewOrder{..} = (\newOrderExchangeId -> NewOrder { newOrderExchangeId, ..} ) <$> f newOrderExchangeId
{-# INLINE newOrderExchangeIdL #-}

-- | 'newOrderClientOrderId' Lens
newOrderClientOrderIdL :: Lens_' NewOrder (Text)
newOrderClientOrderIdL f NewOrder{..} = (\newOrderClientOrderId -> NewOrder { newOrderClientOrderId, ..} ) <$> f newOrderClientOrderId
{-# INLINE newOrderClientOrderIdL #-}

-- | 'newOrderSymbolExchange' Lens
newOrderSymbolExchangeL :: Lens_' NewOrder (Maybe Text)
newOrderSymbolExchangeL f NewOrder{..} = (\newOrderSymbolExchange -> NewOrder { newOrderSymbolExchange, ..} ) <$> f newOrderSymbolExchange
{-# INLINE newOrderSymbolExchangeL #-}

-- | 'newOrderSymbolCoinapi' Lens
newOrderSymbolCoinapiL :: Lens_' NewOrder (Maybe Text)
newOrderSymbolCoinapiL f NewOrder{..} = (\newOrderSymbolCoinapi -> NewOrder { newOrderSymbolCoinapi, ..} ) <$> f newOrderSymbolCoinapi
{-# INLINE newOrderSymbolCoinapiL #-}

-- | 'newOrderAmountOrder' Lens
newOrderAmountOrderL :: Lens_' NewOrder (Double)
newOrderAmountOrderL f NewOrder{..} = (\newOrderAmountOrder -> NewOrder { newOrderAmountOrder, ..} ) <$> f newOrderAmountOrder
{-# INLINE newOrderAmountOrderL #-}

-- | 'newOrderPrice' Lens
newOrderPriceL :: Lens_' NewOrder (Double)
newOrderPriceL f NewOrder{..} = (\newOrderPrice -> NewOrder { newOrderPrice, ..} ) <$> f newOrderPrice
{-# INLINE newOrderPriceL #-}

-- | 'newOrderSide' Lens
newOrderSideL :: Lens_' NewOrder (OrdSide)
newOrderSideL f NewOrder{..} = (\newOrderSide -> NewOrder { newOrderSide, ..} ) <$> f newOrderSide
{-# INLINE newOrderSideL #-}

-- | 'newOrderOrderType' Lens
newOrderOrderTypeL :: Lens_' NewOrder (OrdType)
newOrderOrderTypeL f NewOrder{..} = (\newOrderOrderType -> NewOrder { newOrderOrderType, ..} ) <$> f newOrderOrderType
{-# INLINE newOrderOrderTypeL #-}

-- | 'newOrderTimeInForce' Lens
newOrderTimeInForceL :: Lens_' NewOrder (TimeInForce)
newOrderTimeInForceL f NewOrder{..} = (\newOrderTimeInForce -> NewOrder { newOrderTimeInForce, ..} ) <$> f newOrderTimeInForce
{-# INLINE newOrderTimeInForceL #-}

-- | 'newOrderExpireTime' Lens
newOrderExpireTimeL :: Lens_' NewOrder (Maybe Date)
newOrderExpireTimeL f NewOrder{..} = (\newOrderExpireTime -> NewOrder { newOrderExpireTime, ..} ) <$> f newOrderExpireTime
{-# INLINE newOrderExpireTimeL #-}

-- | 'newOrderExecInst' Lens
newOrderExecInstL :: Lens_' NewOrder (Maybe [E'ExecInst])
newOrderExecInstL f NewOrder{..} = (\newOrderExecInst -> NewOrder { newOrderExecInst, ..} ) <$> f newOrderExecInst
{-# INLINE newOrderExecInstL #-}



-- * OrdSide



-- * OrdStatus



-- * OrdType



-- * OrderCancelAllRequest

-- | 'orderCancelAllRequestExchangeId' Lens
orderCancelAllRequestExchangeIdL :: Lens_' OrderCancelAllRequest (Text)
orderCancelAllRequestExchangeIdL f OrderCancelAllRequest{..} = (\orderCancelAllRequestExchangeId -> OrderCancelAllRequest { orderCancelAllRequestExchangeId, ..} ) <$> f orderCancelAllRequestExchangeId
{-# INLINE orderCancelAllRequestExchangeIdL #-}



-- * OrderCancelSingleRequest

-- | 'orderCancelSingleRequestExchangeId' Lens
orderCancelSingleRequestExchangeIdL :: Lens_' OrderCancelSingleRequest (Maybe Text)
orderCancelSingleRequestExchangeIdL f OrderCancelSingleRequest{..} = (\orderCancelSingleRequestExchangeId -> OrderCancelSingleRequest { orderCancelSingleRequestExchangeId, ..} ) <$> f orderCancelSingleRequestExchangeId
{-# INLINE orderCancelSingleRequestExchangeIdL #-}

-- | 'orderCancelSingleRequestExchangeOrderId' Lens
orderCancelSingleRequestExchangeOrderIdL :: Lens_' OrderCancelSingleRequest (Maybe Text)
orderCancelSingleRequestExchangeOrderIdL f OrderCancelSingleRequest{..} = (\orderCancelSingleRequestExchangeOrderId -> OrderCancelSingleRequest { orderCancelSingleRequestExchangeOrderId, ..} ) <$> f orderCancelSingleRequestExchangeOrderId
{-# INLINE orderCancelSingleRequestExchangeOrderIdL #-}

-- | 'orderCancelSingleRequestClientOrderId' Lens
orderCancelSingleRequestClientOrderIdL :: Lens_' OrderCancelSingleRequest (Maybe Text)
orderCancelSingleRequestClientOrderIdL f OrderCancelSingleRequest{..} = (\orderCancelSingleRequestClientOrderId -> OrderCancelSingleRequest { orderCancelSingleRequestClientOrderId, ..} ) <$> f orderCancelSingleRequestClientOrderId
{-# INLINE orderCancelSingleRequestClientOrderIdL #-}



-- * Orders

-- | 'ordersType' Lens
ordersTypeL :: Lens_' Orders (Maybe Text)
ordersTypeL f Orders{..} = (\ordersType -> Orders { ordersType, ..} ) <$> f ordersType
{-# INLINE ordersTypeL #-}

-- | 'ordersExchangeId' Lens
ordersExchangeIdL :: Lens_' Orders (Maybe Text)
ordersExchangeIdL f Orders{..} = (\ordersExchangeId -> Orders { ordersExchangeId, ..} ) <$> f ordersExchangeId
{-# INLINE ordersExchangeIdL #-}

-- | 'ordersData' Lens
ordersDataL :: Lens_' Orders (Maybe [OrdersData])
ordersDataL f Orders{..} = (\ordersData -> Orders { ordersData, ..} ) <$> f ordersData
{-# INLINE ordersDataL #-}



-- * OrdersData

-- | 'ordersDataExchangeId' Lens
ordersDataExchangeIdL :: Lens_' OrdersData (Maybe Text)
ordersDataExchangeIdL f OrdersData{..} = (\ordersDataExchangeId -> OrdersData { ordersDataExchangeId, ..} ) <$> f ordersDataExchangeId
{-# INLINE ordersDataExchangeIdL #-}

-- | 'ordersDataId' Lens
ordersDataIdL :: Lens_' OrdersData (Maybe Text)
ordersDataIdL f OrdersData{..} = (\ordersDataId -> OrdersData { ordersDataId, ..} ) <$> f ordersDataId
{-# INLINE ordersDataIdL #-}

-- | 'ordersDataClientOrderIdFormatExchange' Lens
ordersDataClientOrderIdFormatExchangeL :: Lens_' OrdersData (Maybe Text)
ordersDataClientOrderIdFormatExchangeL f OrdersData{..} = (\ordersDataClientOrderIdFormatExchange -> OrdersData { ordersDataClientOrderIdFormatExchange, ..} ) <$> f ordersDataClientOrderIdFormatExchange
{-# INLINE ordersDataClientOrderIdFormatExchangeL #-}

-- | 'ordersDataExchangeOrderId' Lens
ordersDataExchangeOrderIdL :: Lens_' OrdersData (Maybe Text)
ordersDataExchangeOrderIdL f OrdersData{..} = (\ordersDataExchangeOrderId -> OrdersData { ordersDataExchangeOrderId, ..} ) <$> f ordersDataExchangeOrderId
{-# INLINE ordersDataExchangeOrderIdL #-}

-- | 'ordersDataAmountOpen' Lens
ordersDataAmountOpenL :: Lens_' OrdersData (Maybe Double)
ordersDataAmountOpenL f OrdersData{..} = (\ordersDataAmountOpen -> OrdersData { ordersDataAmountOpen, ..} ) <$> f ordersDataAmountOpen
{-# INLINE ordersDataAmountOpenL #-}

-- | 'ordersDataAmountFilled' Lens
ordersDataAmountFilledL :: Lens_' OrdersData (Maybe Double)
ordersDataAmountFilledL f OrdersData{..} = (\ordersDataAmountFilled -> OrdersData { ordersDataAmountFilled, ..} ) <$> f ordersDataAmountFilled
{-# INLINE ordersDataAmountFilledL #-}

-- | 'ordersDataStatus' Lens
ordersDataStatusL :: Lens_' OrdersData (Maybe OrdStatus)
ordersDataStatusL f OrdersData{..} = (\ordersDataStatus -> OrdersData { ordersDataStatus, ..} ) <$> f ordersDataStatus
{-# INLINE ordersDataStatusL #-}

-- | 'ordersDataTimeOrder' Lens
ordersDataTimeOrderL :: Lens_' OrdersData (Maybe [[Text]])
ordersDataTimeOrderL f OrdersData{..} = (\ordersDataTimeOrder -> OrdersData { ordersDataTimeOrder, ..} ) <$> f ordersDataTimeOrder
{-# INLINE ordersDataTimeOrderL #-}

-- | 'ordersDataErrorMessage' Lens
ordersDataErrorMessageL :: Lens_' OrdersData (Maybe Text)
ordersDataErrorMessageL f OrdersData{..} = (\ordersDataErrorMessage -> OrdersData { ordersDataErrorMessage, ..} ) <$> f ordersDataErrorMessage
{-# INLINE ordersDataErrorMessageL #-}

-- | 'ordersDataClientOrderId' Lens
ordersDataClientOrderIdL :: Lens_' OrdersData (Maybe Text)
ordersDataClientOrderIdL f OrdersData{..} = (\ordersDataClientOrderId -> OrdersData { ordersDataClientOrderId, ..} ) <$> f ordersDataClientOrderId
{-# INLINE ordersDataClientOrderIdL #-}

-- | 'ordersDataSymbolExchange' Lens
ordersDataSymbolExchangeL :: Lens_' OrdersData (Maybe Text)
ordersDataSymbolExchangeL f OrdersData{..} = (\ordersDataSymbolExchange -> OrdersData { ordersDataSymbolExchange, ..} ) <$> f ordersDataSymbolExchange
{-# INLINE ordersDataSymbolExchangeL #-}

-- | 'ordersDataSymbolCoinapi' Lens
ordersDataSymbolCoinapiL :: Lens_' OrdersData (Maybe Text)
ordersDataSymbolCoinapiL f OrdersData{..} = (\ordersDataSymbolCoinapi -> OrdersData { ordersDataSymbolCoinapi, ..} ) <$> f ordersDataSymbolCoinapi
{-# INLINE ordersDataSymbolCoinapiL #-}

-- | 'ordersDataAmountOrder' Lens
ordersDataAmountOrderL :: Lens_' OrdersData (Maybe Double)
ordersDataAmountOrderL f OrdersData{..} = (\ordersDataAmountOrder -> OrdersData { ordersDataAmountOrder, ..} ) <$> f ordersDataAmountOrder
{-# INLINE ordersDataAmountOrderL #-}

-- | 'ordersDataPrice' Lens
ordersDataPriceL :: Lens_' OrdersData (Maybe Double)
ordersDataPriceL f OrdersData{..} = (\ordersDataPrice -> OrdersData { ordersDataPrice, ..} ) <$> f ordersDataPrice
{-# INLINE ordersDataPriceL #-}

-- | 'ordersDataSide' Lens
ordersDataSideL :: Lens_' OrdersData (Maybe E'Side)
ordersDataSideL f OrdersData{..} = (\ordersDataSide -> OrdersData { ordersDataSide, ..} ) <$> f ordersDataSide
{-# INLINE ordersDataSideL #-}

-- | 'ordersDataOrderType' Lens
ordersDataOrderTypeL :: Lens_' OrdersData (Maybe E'OrderType)
ordersDataOrderTypeL f OrdersData{..} = (\ordersDataOrderType -> OrdersData { ordersDataOrderType, ..} ) <$> f ordersDataOrderType
{-# INLINE ordersDataOrderTypeL #-}

-- | 'ordersDataTimeInForce' Lens
ordersDataTimeInForceL :: Lens_' OrdersData (Maybe TimeInForce)
ordersDataTimeInForceL f OrdersData{..} = (\ordersDataTimeInForce -> OrdersData { ordersDataTimeInForce, ..} ) <$> f ordersDataTimeInForce
{-# INLINE ordersDataTimeInForceL #-}

-- | 'ordersDataExpireTime' Lens
ordersDataExpireTimeL :: Lens_' OrdersData (Maybe Date)
ordersDataExpireTimeL f OrdersData{..} = (\ordersDataExpireTime -> OrdersData { ordersDataExpireTime, ..} ) <$> f ordersDataExpireTime
{-# INLINE ordersDataExpireTimeL #-}

-- | 'ordersDataExecInst' Lens
ordersDataExecInstL :: Lens_' OrdersData (Maybe [E'ExecInst])
ordersDataExecInstL f OrdersData{..} = (\ordersDataExecInst -> OrdersData { ordersDataExecInst, ..} ) <$> f ordersDataExecInst
{-# INLINE ordersDataExecInstL #-}



-- * Position

-- | 'positionType' Lens
positionTypeL :: Lens_' Position (Maybe Text)
positionTypeL f Position{..} = (\positionType -> Position { positionType, ..} ) <$> f positionType
{-# INLINE positionTypeL #-}

-- | 'positionExchangeName' Lens
positionExchangeNameL :: Lens_' Position (Maybe Text)
positionExchangeNameL f Position{..} = (\positionExchangeName -> Position { positionExchangeName, ..} ) <$> f positionExchangeName
{-# INLINE positionExchangeNameL #-}

-- | 'positionData' Lens
positionDataL :: Lens_' Position (Maybe [PositionData])
positionDataL f Position{..} = (\positionData -> Position { positionData, ..} ) <$> f positionData
{-# INLINE positionDataL #-}



-- * PositionData

-- | 'positionDataId' Lens
positionDataIdL :: Lens_' PositionData (Maybe Text)
positionDataIdL f PositionData{..} = (\positionDataId -> PositionData { positionDataId, ..} ) <$> f positionDataId
{-# INLINE positionDataIdL #-}

-- | 'positionDataSymbolExchange' Lens
positionDataSymbolExchangeL :: Lens_' PositionData (Maybe Text)
positionDataSymbolExchangeL f PositionData{..} = (\positionDataSymbolExchange -> PositionData { positionDataSymbolExchange, ..} ) <$> f positionDataSymbolExchange
{-# INLINE positionDataSymbolExchangeL #-}

-- | 'positionDataSymbolCoinapi' Lens
positionDataSymbolCoinapiL :: Lens_' PositionData (Maybe Text)
positionDataSymbolCoinapiL f PositionData{..} = (\positionDataSymbolCoinapi -> PositionData { positionDataSymbolCoinapi, ..} ) <$> f positionDataSymbolCoinapi
{-# INLINE positionDataSymbolCoinapiL #-}

-- | 'positionDataAvgEntryPrice' Lens
positionDataAvgEntryPriceL :: Lens_' PositionData (Maybe Double)
positionDataAvgEntryPriceL f PositionData{..} = (\positionDataAvgEntryPrice -> PositionData { positionDataAvgEntryPrice, ..} ) <$> f positionDataAvgEntryPrice
{-# INLINE positionDataAvgEntryPriceL #-}

-- | 'positionDataQuantity' Lens
positionDataQuantityL :: Lens_' PositionData (Maybe Double)
positionDataQuantityL f PositionData{..} = (\positionDataQuantity -> PositionData { positionDataQuantity, ..} ) <$> f positionDataQuantity
{-# INLINE positionDataQuantityL #-}

-- | 'positionDataIsBuy' Lens
positionDataIsBuyL :: Lens_' PositionData (Maybe Bool)
positionDataIsBuyL f PositionData{..} = (\positionDataIsBuy -> PositionData { positionDataIsBuy, ..} ) <$> f positionDataIsBuy
{-# INLINE positionDataIsBuyL #-}

-- | 'positionDataUnrealisedPnL' Lens
positionDataUnrealisedPnLL :: Lens_' PositionData (Maybe Double)
positionDataUnrealisedPnLL f PositionData{..} = (\positionDataUnrealisedPnL -> PositionData { positionDataUnrealisedPnL, ..} ) <$> f positionDataUnrealisedPnL
{-# INLINE positionDataUnrealisedPnLL #-}

-- | 'positionDataLeverage' Lens
positionDataLeverageL :: Lens_' PositionData (Maybe Double)
positionDataLeverageL f PositionData{..} = (\positionDataLeverage -> PositionData { positionDataLeverage, ..} ) <$> f positionDataLeverage
{-# INLINE positionDataLeverageL #-}

-- | 'positionDataCrossMargin' Lens
positionDataCrossMarginL :: Lens_' PositionData (Maybe Bool)
positionDataCrossMarginL f PositionData{..} = (\positionDataCrossMargin -> PositionData { positionDataCrossMargin, ..} ) <$> f positionDataCrossMargin
{-# INLINE positionDataCrossMarginL #-}

-- | 'positionDataLiquidationPrice' Lens
positionDataLiquidationPriceL :: Lens_' PositionData (Maybe Double)
positionDataLiquidationPriceL f PositionData{..} = (\positionDataLiquidationPrice -> PositionData { positionDataLiquidationPrice, ..} ) <$> f positionDataLiquidationPrice
{-# INLINE positionDataLiquidationPriceL #-}

-- | 'positionDataRawData' Lens
positionDataRawDataL :: Lens_' PositionData (Maybe Text)
positionDataRawDataL f PositionData{..} = (\positionDataRawData -> PositionData { positionDataRawData, ..} ) <$> f positionDataRawData
{-# INLINE positionDataRawDataL #-}



-- * Severity



-- * TimeInForce


